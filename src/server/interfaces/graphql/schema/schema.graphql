### This file was autogenerated by Nexus 0.11.7
### Do not make changes to this file directly


scalar Cursor

"""Date custom scalar type"""
scalar Date

"""Day custom scalar type"""
scalar Day

"""States of deletable entities"""
enum DeletableEntityState {
  ACTIVE
  DELETED
}

input FilterInput {
  fields: [String!]
  text: String
}

interface Node {
  """Unique identifier for the resource"""
  id: ID!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
}

"""Phone number scalar type"""
scalar Phone

type Post implements Node & Timestamps {
  createdAt: Date!
  deletedAt: Date!

  """Unique identifier for the resource"""
  id: ID!
  name: String!
  pieceRate: Float
  pieceRates: [PostPieceRate!]!
  state: DeletableEntityState!
  updatedAt: Date!
}

type PostConnection {
  edges: [PostEdge!]!
  pageInfo: PageInfo!
}

type PostEdge {
  cursor: ID!
  node: Post!
}

"""Piece rate of post"""
type PostPieceRate {
  day: Day!
  value: Float!
}

type Query {
  post(id: ID!): Post!
  posts(id: ID!): PostConnection!
  seller(id: ID!): Seller!
  sellers(id: ID!): SellerConnection!
  seniorityType(id: ID!): SeniorityType!
  seniorityTypes(id: ID!): SeniorityTypeConnection!
}

type Seller implements Node & Timestamps {
  appointments: [SellerAppontment!]!
  createdAt: Date!
  deletedAt: Date!
  dismissAt: Day
  firstName: String!

  """Unique identifier for the resource"""
  id: ID!
  lastName: String!
  middleName: String!
  phone: Phone
  post: PostConnection
  recruitedAt: Day
  seniorityType: SeniorityType
  state: SellerStateEnum!
  updatedAt: Date!
}

type SellerAppontment {
  day: Day!
  post: Post!
}

type SellerConnection {
  edges: [SellerEdge!]!
  pageInfo: PageInfo!
}

type SellerEdge {
  cursor: ID!
  node: Seller!
}

"""Seller states"""
enum SellerStateEnum {
  DELETED
  DISMISS
  NEW
  RECRUITED
}

type SeniorityType implements Node & Timestamps {
  award: Float
  awards: [SeniorityTypeAward!]!
  createdAt: Date!
  deletedAt: Date!

  """Unique identifier for the resource"""
  id: ID!
  months: Int
  name: String!
  state: DeletableEntityState!
  updatedAt: Date!
}

"""SeniorityTypeAward for seniority"""
type SeniorityTypeAward {
  day: Day!
  value: Float!
}

type SeniorityTypeConnection {
  edges: [SeniorityTypeEdge!]!
  pageInfo: PageInfo!
}

type SeniorityTypeEdge {
  cursor: ID!
  node: SeniorityType!
}

input SortInput {
  field: String
  order: String
}

interface Timestamps {
  createdAt: Date!
  deletedAt: Date!
  updatedAt: Date!
}
